#!/usr/bin/env python

from tqdm import tqdm


import pysam
from pyfaidx import Fasta

from discart.utils import *


bam = sam_to_sorted_bam("test/test_001.sam", "tmp/test_001.sorted.bam", "tmp")
fa = "/home/youri/bio/fasta/hg38.fa"


#from string import maketrans


with Fasta(fa) as genes, pysam.AlignmentFile(bam, "rb") as fh:
    for _ in fh.fetch():
        if _.has_tag('SA'):
            for __ in [__ for __ in _.get_tag('SA').split(";") if len(__) > 0]:
                __ = __.split(",")
                __[1] = int(__[1]) 
                print(_.query_name + " :  " , __)

                a = str(genes[__[0]][__[1] - 6 - 1:__[1] - 1])
                print ("     A   : ",sorted([a, revcomp(a)])[0])

                b = str(genes[__[0]][__[1] - 1 : __[1] - 1 + 6])
                print ("     B   : ",sorted([b, revcomp(b)])[0])

                end = __[1] + bam_parse_alignment_offset(cigar_to_cigartuple(__[3]))
                c = str(genes[__[0]][end - 6 - 1: end - 1])
                print ("     C   : ",sorted([c, revcomp(c)])[0])
                
                d = str(genes[__[0]][end - 1: end - 1 + 6])
                print ("     D   : ",sorted([d, revcomp(d)])[0])
                
                #print(end)
                # calculate alignment offset
                # "â€¢ Sum of lengths of the M/I/S/=/X operations shall equal the length of SEQ." - sam spec


